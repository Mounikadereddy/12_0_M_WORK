package School_Child.Step_Child.No_FCDR {
   use priorSchoolTermValid;
   /**
 */
rule CP0139$45$2C {
      property ilog.rules.business_name = "CP0139-2C";
      property ilog.rules.package_name = "School Child.Step Child.No FCDR";
      property status = "new";
      when {
         gov.va.vba.rbps.coreframework.xom.Child() from Child;
         gov.va.vba.rbps.coreframework.xom.util.VeteranCommonDates() from Veteran;
         evaluate ((((Child.childType.equals(gov.va.vba.rbps.coreframework.xom.ChildType.STEPCHILD))) && (gov.va.vba.rbps.coreframework.xom.util.RbpsXomUtil.isNotPresent(Veteran.firstChangedDateofRating)) && (gov.va.vba.rbps.coreframework.xom.util.RbpsXomUtil.isPresent(Child.currentTerm)) && (gov.va.vba.rbps.coreframework.xom.util.RbpsXomUtil.isPresent((Child.currentTerm).courseStudentStartDate)) && (priorSchoolTermValid) && (gov.va.vba.rbps.coreframework.xom.util.RbpsXomUtil.isPresent(Child.lastTerm)) && (Veteran.claimDate.compareTo(gov.va.vba.rbps.coreframework.xom.util.RbpsXomUtil.addDaysToDate(365, (Child.lastTerm).courseEndDate)) <= 0) && ((Child.currentTerm).courseStudentStartDate.compareTo(gov.va.vba.rbps.coreframework.xom.util.RbpsXomUtil.addMonthsToDate(5, (Child.lastTerm).courseEndDate)) <= 0) && (Veteran.marriageDate.compareTo((Child.lastTerm).courseEndDate) <= 0)));
      } then {
         Award.eventDate = (Child.lastTerm).courseEndDate;
      }
   }
}

